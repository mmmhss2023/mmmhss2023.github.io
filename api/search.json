[{"id":"64646b629a76ebd5c925d6a25f5783c0","title":"求求你写下类型注解吧！","content":"求求你写下类型注解吧！\npythondef triangleArea(base, height):\n    return base * height / 2\ndef triangleArea_plus(base: float, height: float) -&gt; float:\n    return base * height / 2\nprint(triangleArea(3, 4),\ntriangleArea_plus(3, 4), \nsep = &#39;\\n&#39;)\n现在很多初学者都不喜欢写类型注解了，要么觉得多余，要么机构没教，要么懒得写。但是，类型注解真的很重要！就例如开头的这段代码，以下是它的输出。  \npython6.0\n6.0既然两个函数输出一致，为什么第二个函数要写类型注解，还增加了代码量？以下是类型注解的几个好处。  \n1,遵守Python之禅：显式优于隐式Python是动态类型的语言，你不写类型注解，没人知道你的函数参数和返回值类型都应该是什么。就例如这样：\npythondef calculateArea(a, b):\n    return int(a * b)\narea = calculateArea(3, 4.003)\nprint(area == 12.009)pythonFalse预期的结果与实际结果不一样，这是必然的，因为编码者不知道calculateArea的返回值是int类型。但是带上类型注解，就可以避免这样的问题。  \npythondef calculateArea(a: int | float, b: int | float) -&gt; int:\n    return int(a * b)\narea = calculateArea(3, 4.003)\nprint(area == 12)pythonTrue2,帮助编码只要你使用的是任意主流的IDE，例如VsCode, PyCharm,在你编码时，这些IDE都会根据这个函数的类型注解提醒你参数和返回值的类型。这将极大程度地帮助你快速编码并正确使用现成的函数。有些情况下，IDE还会根据类型注解提示你某些类型和另一些类型之间的错误，例如str类型的数据不可以被int函数接收。  \n3,自定义化你的代码Python3.12版本中新增了type软关键字，这可以使你定义类型别名。例如你想要让函数接收一个int或str类型的数据，可以这么做：\npythontype IntOrStr = int | str\ndef function(p : IntOrStr) -&gt; bool:\n    if type(p) in [int, str]:\n        return True\n    else:\n        return False\nprint(function(&#39;test&#39;))\nprint(function(123))pythonTrue\nTrue现在再看看开头的两张图片，是不是感觉。。。一言难尽了？大家多写写类型注解吧！\n","slug":"求求你写下类型注解吧！","date":"2023-12-29T15:20:53.000Z","categories_index":"开发","tags_index":"Python,编程,技巧","author_index":"萌萌梦幻神兽"},{"id":"bf24fda0c1683a7bb4ae077a3e27fa4e","title":"介绍强大的小图灵API框架","content":"小图灵一直没有一个能用的API框架,于是我们工作室自己动手制作了一个强大而又快捷的API框架.运行在Python之中,需要3.10等高版本支持.以下是一个示例:  \npythonfrom icodeapi import IcodeAPI\ncookie = input(&#39;Enter your cookie: &#39;)\napi = IcodeAPI(cookie = cookie)\napi.updateIntro(&#39;Update by icodeapi&#39;)PyPI Github  文档  \n\n这个强大的API框架可以帮助你构建响应式机器人使用它强大的server模块以轻易地构建服务器.这是它在官网放出的示例.  \npythonimport icodeapi\nfrom icodeapi import server\ncookie = input(&quot;Enter cookie: &quot;)\napi = icodeapi.AsyncIcodeAPI(cookie = cookie)\nServer = server.IcodeServer(api = api)\n@Server.CheckMessage()\nasync def AutoReply(userId, bot):\n    try:\n        await bot.fastReply(userId, &#39;Hello world!&#39;)\n    except AssertionError:\n        pass\nserver.RunServer(Server)仅仅几行代码就可以实现自动回复, 监测评论下回复等复杂功能!  \n内有封装各种实用工具你甚至可以在评论区唱歌.  \npythonfrom icodeapi import *\nfrom icodeapi.tools import *\nimport time\nuser = IcodeAPI(input(&#39;Cookie: &#39;))\ntimes = int(input(&#39;Sing times: &#39;))\nnum = 0\nwhile num &lt; times:\n    for i in SingSong(&#39;a1f09b5eb34a48dfbdc8dee59d130ec6&#39;,\n        &quot;&quot;&quot;You say that we will always be,\n        without you I fell lost at see.\n        Through the darkness you&#39;d hide with me,\n        like a wind we&#39;d be wild and free.\n        You~~~\n        said you follow me anywhere.\n        But your e ~ yes,\n        tell me you won&#39;t be there.\n        I&#39;ve gotta learn how to love without you!\n        I&#39;ve gotta carry me cross without you~\n        Stuck in the riddle and I&#39;m just about to-----\n        figure out without you!\n        And I&#39;m done sitting home without you!\n        Fuck I&#39;m going out without you!\n        I&#39;m going to tear this city without you,\n        I&#39;m going Bonnie and Clyde without you~~~\n        deng deng, deng deng deng, deng deng deng deng deng deng, deng deng deng~\n        deng deng, deng deng deng, deng deng deng deng deng deng deng deng deng deng~~~~&quot;&quot;&quot;,\n        user\n    ):\n        if i == &#39;Finish one time&#39;:\n            num += 1\n        time.sleep(5.1)完美地支持同步与异步你可以使用fastapi结合icodeapi提供的异步方法来构建服务器.  \npythonfrom fastapi import FastAPI\nfrom fastapi.responses import JSONResponse\nfrom fastapi.middleware.cors import CORSMiddleware\nfrom icodeapi import AsyncIcodeAPI\nimport uvicorn\napp : FastAPI = FastAPI() # 创建fastapi实例\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[&#39;*&#39;],\n    allow_credentials = True,\n    allow_methods=[&#39;*&#39;],\n    allow_headers=[&#39;*&#39;],\n)\napi : AsyncIcodeAPI = AsyncIcodeAPI() # 实例化AsyncIcodeAPI\n@app.get(&quot;/&quot;)\nasync def getWork() -&gt; JSONResponse: # 返回作品集\n    results = await api.getWorks()\n    return JSONResponse(results)\n@app.get(&quot;/&#123;workId&#125;&quot;)\nasync def getWorkById(workId : str) -&gt; JSONResponse: # 返回作品信息\n    results = await api.getWorkDetail(workId)\n    return JSONResponse(results)\n@app.get(&quot;/person/&#123;userId&#125;&quot;)\nasync def getPerson(userId : str) -&gt; JSONResponse: # 返回个人信息\n    results = await api.getPersonInfo(userId)\n    return JSONResponse(results)\nuvicorn.run(app, host = &quot;0.0.0.0&quot;, port = 80)项目还在持续更新,目前正在编写1.4版本,希望各位多多支持.","slug":"介绍强大的小图灵API框架","date":"2023-12-28T15:54:09.000Z","categories_index":"开源项目","tags_index":"Python,编程,web开发","author_index":"萌萌梦幻神兽"},{"id":"5ed29085da5924797d4a7973a20f2808","title":"我喜欢你","content":"最喜欢你们了!\n\n关于我喜欢的人御坂美琴\n加藤惠\n夏娜\n栉枝实乃梨\n雪之下雪乃\n莎莉娜\n小野寺小咲\n阿尔托莉雅 潘德拉贡\n佩可莉姆\n五更琉璃\n砂狼白子\n飞鸟马时\n早濑优香\n安卡希雅\n🎉🎉你们是在千千万万美少女中最能直击我心灵的女孩,我永远永远喜欢你们!😍🥰","slug":"我喜欢你","date":"2023-12-28T15:35:07.000Z","categories_index":"关于","tags_index":"后宫","author_index":"萌萌梦幻神兽"}]